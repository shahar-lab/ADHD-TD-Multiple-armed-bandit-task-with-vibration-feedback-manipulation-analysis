family = binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 0)
# Load libraries:
library(dplyr)
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
stay_model3<-glmer(stay_key~ reward_oneback*condition_oneback*group +(1|subject),
data = df,
family = binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 0)
install.packages(lme4)
install.packages('lme4')
install.packages("lme4")
library(lme4)
# View stay results:
df =
df |>
group_by(reward_oneback,condition_oneback,group) |>
summarise(st = mean(stay))
rm(list=ls())
#source('./functions/my_packages.R')
load('./data/empirical_data/df.rdata')
# Load libraries:
library(dplyr)
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
library(lme4)
stay_model3<-glmer(stay_key~ reward_oneback*condition_oneback*group +(1|subject),
data = df,
family = binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 0)
plot(effect('reward_oneback',stay_model3))
summary(stay_model1)
summary(stay_model3)
anova(stay_model3)
plot(effect('condition_oneback',stay_model3))
plot(effect('group',stay_model3))
plot(effect('reward_oneback:condition_oneback:group',stay_model3,xlevels=2))
# Organize data:
df$condition = relevel(df$condition, ref = 'off')
contrasts(df$condition)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)
plot(effect('reward_oneback:condition_oneback:group',stay_model3,xlevels=2))
stay_model3<-glmer(stay_key~ reward_oneback*condition_oneback*group +(1|subject),
data = df,
family = binomial,
control = glmerControl(optimizer = "bobyqa"), nAGQ = 0)
plot(effect('reward_oneback',stay_model3))
anova(stay_model3)
plot(effect('condition_oneback',stay_model3))
plot(effect('group',stay_model3))
plot(effect('reward_oneback:condition_oneback:group',stay_model3,xlevels=2))
time_model1<-brm(rt ~ delta_exp_value*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(block_phase=='second_half'),
family = exgaussian,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
bayestestR::describe_posterior(time_model1, ci=(.89))
stay_model2<-brm(stay ~ reward_oneback*condition*group +(reward_oneback*condition| subject),
data = df,
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
#describe_posterior(stay_model2)
bayestestR::describe_posterior(stay_model2, ci=(.89))
conditional_effects(stay_model2)
conditions <- make_conditions(stay_model2, "condition")
conditional_effects(stay_model2, "reward_oneback:group", conditions = conditions)
plot(effect('reward_oneback',stay_model3))
anova(stay_model3)
plot(effect('condition_oneback',stay_model3))
plot(effect('group',stay_model3))
plot(effect('condition_oneback',stay_model3))
plot(effect('reward_oneback:condition_oneback:group',stay_model3,xlevels=2))
plot(effect('reward_oneback',stay_model3))
plot(effect('condition_oneback',stay_model3))
plot(effect('group',stay_model3))
plot(effect('reward_oneback:condition_oneback:group',stay_model3,xlevels=2))
plot(effect('reward_oneback:condition_oneback',stay_model3))
# Stay key model1 - irrelevant learning
stay_model4<-brm(stay ~ reward_oneback*condition*group +(reward_oneback*condition| subject),
data = df,
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
#describe_posterior(stay_model4)
bayestestR::describe_posterior(stay_model4, ci=(.89))
conditional_effects(stay_model4)
conditions <- make_conditions(stay_model4, "condition")
conditional_effects(stay_model4, "reward_oneback:group", conditions = conditions)
# Load libraries:
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
library(lme4)
library(emmeans)
df$condition = relevel(df$condition, ref = 'off')
contrasts(df$condition)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)
rm(list=ls())
#source('./functions/my_packages.R')
load('./data/empirical_data/df.rdata')
# Load libraries:
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
library(lme4)
library(emmeans)
df$condition = relevel(df$condition, ref = 'off')
contrasts(df$condition)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)
accuracy_model10<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial == 1|trial==2|trial==3|trial==4|trial==5|trial==6|trial==7|trial==8|trial==9|trial==10),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
View(df)
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial == 1|trial==2|trial==3|trial==4|trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
rm(list=ls())
#source('./functions/my_packages.R')
load('./data/empirical_data/df.rdata')
# Load libraries:
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
library(lme4)
library(emmeans)
df$condition = relevel(df$condition, ref = 'off')
contrasts(df$condition)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)
accuracy_model8<-brm(accuracy ~ delta_exp_value*condition*group +(delta_exp_value*condition| subject),
data = df ,
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model10<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial == 1|trial==2|trial==3|trial==4|trial==5|trial==6|trial==7|trial==8|trial==9|trial==10),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
View(df)
View(df)
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial == 1|trial==2|trial==3|trial==4|trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model10<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial==1|trial==2|trial==3|trial==4|trial==5|trial==6|trial==7|trial==8|trial==9|trial==10),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
df$trial[1]
View(df)
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial==1|trial==2|trial==3|trial==4|trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
data = df|>filter(trial==1|trial==2|trial==3|trial==4|trial==5)
data = df|>filter(trial==1)
data = df|>filter(trial[1])
data = df|>filter(trial[1])
data = df|>filter(trial==1|trial==2|trial==3|trial==4|trial==5)
rm(list=ls())
#source('./functions/my_packages.R')
load('./data/empirical_data/df.rdata')
# Load libraries:
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
library(lme4)
library(emmeans)
df$condition = relevel(df$condition, ref = 'off')
contrasts(df$condition)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial==1|trial==2|trial==3|trial==4|trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
data = df|>filter(trial==1|trial==2|trial==3|trial==4|trial==5)
data = df|>filter(df$trial==1|df$trial==2)
accuracy_model10<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(df$trial==1|df$trial==2|df$trial==3|df$trial==4|df$trial==5|df$trial==6|df$trial==7|df$trial==8|df$trial==9|df$trial==10),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model10<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(df$trial==1|df$trial==2|df$trial==3|df$trial==4|df$trial==5|df$trial==6|df$trial==7|df$trial==8|df$trial==9|df$trial==10),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
rm(list=ls())
#source('./functions/my_packages.R')
load('./data/empirical_data/df.rdata')
# Load libraries:
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
library(lme4)
library(emmeans)
df$condition = relevel(df$condition, ref = 'off')
contrasts(df$condition)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)
accuracy_model10<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(df$trial==1|df$trial==2|df$trial==3|df$trial==4|df$trial==5|df$trial==6|df$trial==7|df$trial==8|df$trial==9|df$trial==10),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
View(df)
df$condition
accuracy_model8<-brm(accuracy ~ delta_exp_value*condition*group +(delta_exp_value*condition| subject),
data = df ,
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial==1),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model8<-brm(accuracy ~ delta_exp_value*condition*group +(delta_exp_value*condition| subject),
data = df ,
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
conditions <- make_conditions(accuracy_model8, "condition")
conditional_effects(accuracy_model8, "delta_exp_value:group", conditions = conditions)
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial==1),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df,
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(df$trial==1|df$trial==2|df$trial==3|df$trial==4|df$trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(df$trial==1),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df,
data = df|>filter(trial==1),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
# Stay key model1 - irrelevant learning
stay_key1<-brm(stay_key ~ reward_oneback*condition*group +(reward_oneback*condition| subject),
data = df|>filter(reward_oneback = factor(reward_oneback)),
family = bernoulli,
warmup = 1000,
iter = 2000,
cores = 4,
chains = 4,
backend='cmdstan')
time_model1<-brm(rt ~ delta_exp_value*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(block_phase=='second_half'),
family = exgaussian,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df %>% filter(trial==1 | trial==2),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df>filter(df$trial==1|df$trial==2|df$trial==3|df$trial==4|df$trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df>filter(trial==1|trial==2|trial==3|trial==4|trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df>filter(trial==1|trial==2|trial==3|trial==4|trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
accuracy_model9<-brm(accuracy ~ trial*condition*group +(delta_exp_value*condition| subject),
data = df|>filter(trial==1|trial==2|trial==3|trial==4|trial==5),
#family = bernoulli,
warmup = 2000,
iter = 3000,
cores = 4,
chains = 4,
backend='cmdstan')
load('./data/empirical_data/df.rdata')
rm(list=ls())
load('./data/empirical_data/df.rdata')
### Load libraries:
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
library(lme4)
library(emmeans)
library(dplyr)
library(distributional)
library(ggdist)
library(tidybayes)
df$condition = relevel(df$condition, ref = 'off')
contrasts(df$condition)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)
#specific the model
f_model = acc ~   1 + group + (1 | subject)
df$condition = relevel(df$condition, ref = 'off')
contrasts(df$condition)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)
df$accuracy
class(df$accuracy)
df$accuracy = df$accuracy*100
#specific the model
f_model = acc ~   1 + group + (1 | subject)
get_prior(f_model,data = df)
#specific the model
f_model = acc ~   1 + group + (1 | subject)
#specific the model
f_model = accuracy ~   1 + group + (1 | subject)
get_prior(f_model,data = df)
myprior = c(
prior(normal(50, 25), class = Intercept),
prior(normal(0, 10),  class = b        , coef = 'groupadhd'),
prior(student_t(10,0,50), class = sigma )
)
model<-brm(f_model,
data   = df ,
warmup = 10000,
iter   = 11000,
cores  = 4,
chains = 4,
backend='cmdstan')
save(model,file='./data/regression_data/acc~1+group.rdata')
load('./data/regression_data/acc~1+group.rdata')
save(model,file='./data/regression/acc~1+group.rdata')
load('./data/regression/acc~1+group.rdata')
describe_posterior(model)
rm(list=ls())
load('./data/empirical_data/df.rdata')
### Load libraries:
library(ggplot2)
library(effects)
library(brms)
library(rstan)
library(bayestestR)
library(cmdstanr)
library(lme4)
library(emmeans)
library(dplyr)
library(distributional)
library(ggdist)
library(tidybayes)
df$group = relevel(df$group, ref = 'td')
contrasts(df$group)<-c(-1,1)
contrasts(df$group)
df$accuracy = df$accuracy*100
#specific the model
f_model = accuracy ~   1 + group + (1 | subject)
get_prior(f_model,data = df)
myprior = c(
prior(normal(50, 25), class = Intercept),
prior(normal(0, 10),  class = b        , coef = 'groupadhd'),
prior(student_t(10,0,50), class = sigma )
)
model<-brm(f_model,
data   = df ,
warmup = 10000,
iter   = 11000,
cores  = 4,
chains = 4,
backend='cmdstan')
describe_posterior(model)
save(model,file='./data/regression/acc~1+group.rdata')
load('./data/regression/acc~1+group.rdata')
describe_posterior(model)
model |>
emmeans(~ group,
epred = T,
level = 0.89,
re_formula = NA) |>
contrast(list('group effect '=c(-1,+1)))
1.43*2
